# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-12 03:30
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField(blank=True, null=True)),
                ('reference_genome', models.CharField(blank=True, max_length=45, null=True)),
                ('compare_method', models.CharField(blank=True, max_length=45, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=45, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'analysis_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompareTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_id', models.IntegerField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=45, null=True)),
                ('comparison_name', models.CharField(blank=True, max_length=45, null=True)),
                ('sample_group1', models.CharField(blank=True, max_length=45, null=True)),
                ('sample_group2', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'compare_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnaSampleSequencingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('resequencing', models.CharField(blank=True, max_length=1, null=True)),
                ('de_novo_sequencing', models.CharField(blank=True, max_length=1, null=True)),
                ('mate_pair', models.CharField(blank=True, max_length=1, null=True)),
                ('low_initial_weight_sequencing', models.CharField(blank=True, max_length=1, null=True)),
                ('exome', models.CharField(blank=True, max_length=1, null=True)),
                ('target_area_capture', models.CharField(blank=True, max_length=1, null=True)),
                ('purified', models.CharField(blank=True, max_length=1, null=True)),
                ('unpurified', models.CharField(blank=True, max_length=1, null=True)),
                ('d16s_rdna', models.CharField(blank=True, max_length=1, null=True)),
                ('rad', models.CharField(blank=True, max_length=1, null=True)),
                ('metagenome', models.CharField(blank=True, max_length=1, null=True)),
                ('chip_seq', models.CharField(blank=True, max_length=1, null=True)),
                ('dna_methylation_sequencing', models.CharField(blank=True, max_length=1, null=True)),
                ('rrbs', models.CharField(blank=True, max_length=1, null=True)),
                ('medip_seq', models.CharField(blank=True, max_length=1, null=True)),
                ('mitochondrial_dna_sequencing', models.CharField(blank=True, max_length=1, null=True)),
                ('dna_sample_sequencing_type_other', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'dna_sample_sequencing_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RnaSampleSequencingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('three_eukaryotic_mrna_seq', models.CharField(blank=True, max_length=1, null=True)),
                ('mrna_seq_prokaryotae', models.CharField(blank=True, max_length=1, null=True)),
                ('low_initial_amount_of_eukaryotic_mrna_seq', models.CharField(blank=True, max_length=1, null=True)),
                ('strand_specific_transcriptome', models.CharField(blank=True, max_length=1, null=True)),
                ('incrna_seq', models.CharField(blank=True, max_length=1, null=True)),
                ('c_dna_transcriptome', models.CharField(blank=True, max_length=1, null=True)),
                ('cdna_single_cell_transcriptom', models.CharField(blank=True, max_length=1, null=True)),
                ('small_rna_sequencing', models.CharField(blank=True, max_length=1, null=True)),
                ('plasma_small_rna_equencing', models.CharField(blank=True, max_length=1, null=True)),
                ('rna_sample_sequencing_type_other', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'rna_sample_sequencing_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleInfoDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_alias', models.CharField(blank=True, max_length=45, null=True, unique=True)),
                ('project_id', models.IntegerField()),
                ('sample_name', models.CharField(blank=True, max_length=50, null=True)),
                ('product_num', models.CharField(blank=True, max_length=50, null=True)),
                ('concentration', models.CharField(blank=True, max_length=50, null=True)),
                ('volume', models.CharField(blank=True, max_length=50, null=True)),
                ('od_260_or_280', models.CharField(blank=True, max_length=50, null=True)),
                ('pre_time', models.CharField(blank=True, max_length=50, null=True)),
                ('database_type', models.CharField(blank=True, max_length=50, null=True)),
                ('data_quantity', models.CharField(blank=True, max_length=50, null=True)),
                ('quality_inspection', models.CharField(blank=True, max_length=50, null=True)),
                ('any_single_num', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_number', models.CharField(blank=True, max_length=50, null=True)),
                ('library_name', models.CharField(blank=True, max_length=50, null=True)),
                ('index_num', models.CharField(blank=True, max_length=50, null=True)),
                ('index_sequence', models.CharField(blank=True, max_length=50, null=True)),
                ('library_type', models.CharField(blank=True, max_length=50, null=True)),
                ('length_of_gel', models.CharField(blank=True, max_length=50, null=True)),
                ('fragment_length', models.CharField(blank=True, max_length=50, null=True)),
                ('library_volume', models.CharField(blank=True, max_length=50, null=True)),
                ('data_size', models.CharField(blank=True, max_length=50, null=True)),
                ('wg_cid', models.CharField(blank=True, max_length=50, null=True)),
                ('lib_id', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_type', models.CharField(blank=True, max_length=50, null=True)),
                ('q_rcb', models.CharField(blank=True, max_length=50, null=True)),
                ('od', models.CharField(blank=True, max_length=50, null=True)),
                ('rin', models.CharField(blank=True, max_length=50, null=True)),
                ('lib_size', models.CharField(blank=True, max_length=50, null=True)),
                ('qty', models.CharField(blank=True, max_length=50, null=True)),
                ('original_sample_name', models.CharField(blank=True, max_length=50, null=True)),
                ('project_id_e', models.CharField(blank=True, max_length=50, null=True)),
                ('yield_field', models.CharField(blank=True, db_column='yield', max_length=50, null=True)),
                ('reads', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'sample_info_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleOther',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField(blank=True, null=True)),
                ('reagent_kit_method', models.CharField(blank=True, max_length=1, null=True)),
                ('ctab_method', models.CharField(blank=True, max_length=1, null=True)),
                ('trizol_method', models.CharField(blank=True, max_length=1, null=True)),
                ('other_method', models.CharField(blank=True, max_length=45, null=True)),
                ('berry_handel', models.CharField(blank=True, max_length=1, null=True)),
                ('ret_handel', models.CharField(blank=True, max_length=1, null=True)),
                ('other_handel', models.CharField(blank=True, max_length=45, null=True)),
                ('accord_contract', models.CharField(blank=True, max_length=1, null=True)),
                ('special_needs', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'sample_other',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SamplePacketInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_id', models.IntegerField(blank=True, null=True)),
                ('sample_id_alias', models.CharField(blank=True, max_length=45, null=True)),
                ('sample_group', models.CharField(blank=True, max_length=45, null=True)),
                ('repeated_experiment', models.CharField(blank=True, max_length=45, null=True)),
                ('sample_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'sample_packet_information',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleProjectMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_number', models.IntegerField(blank=True, null=True, unique=True)),
                ('project_name', models.TextField(blank=True, null=True)),
                ('cust_organization', models.TextField(blank=True, null=True)),
                ('cust_user', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
                ('cust_tel', models.CharField(blank=True, max_length=45, null=True)),
                ('sale_name', models.CharField(blank=True, max_length=45, null=True)),
                ('sp_delive_date', models.CharField(blank=True, max_length=45, null=True)),
                ('sp_sum', models.CharField(blank=True, max_length=45, null=True)),
                ('species', models.CharField(blank=True, max_length=45, null=True)),
                ('project_leader', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('created_by', models.CharField(blank=True, max_length=45, null=True)),
                ('create_time', models.CharField(blank=True, max_length=45, null=True)),
                ('project_log', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sample_project_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('lyophillization', models.CharField(blank=True, max_length=1, null=True)),
                ('te_buffer', models.CharField(blank=True, max_length=1, null=True)),
                ('ddh2o', models.CharField(blank=True, max_length=1, null=True)),
                ('depc', models.CharField(blank=True, max_length=1, null=True)),
                ('sample_species_other', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'sample_species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=50, unique=True)),
                ('project_id', models.IntegerField()),
                ('sample_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sepcies', models.CharField(blank=True, max_length=50, null=True)),
                ('product_num', models.CharField(blank=True, max_length=50, null=True)),
                ('library_type', models.CharField(blank=True, max_length=50, null=True)),
                ('concentration', models.CharField(blank=True, max_length=50, null=True)),
                ('volume', models.CharField(blank=True, max_length=50, null=True)),
                ('data_quantity', models.CharField(blank=True, max_length=50, null=True)),
                ('fragment_length', models.CharField(blank=True, max_length=50, null=True)),
                ('od_260_or_280', models.CharField(blank=True, max_length=50, null=True)),
                ('od_260_or_230', models.CharField(blank=True, max_length=50, null=True)),
                ('comment', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'sample_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('genomic_dna', models.CharField(blank=True, max_length=1, null=True)),
                ('chip_dna', models.CharField(blank=True, max_length=1, null=True)),
                ('pcr_fragment', models.CharField(blank=True, max_length=1, null=True)),
                ('free_dna', models.CharField(blank=True, max_length=1, null=True)),
                ('mitochondrial_dna', models.CharField(blank=True, max_length=1, null=True)),
                ('others_dna', models.CharField(blank=True, max_length=45, null=True)),
                ('total_rna', models.CharField(blank=True, max_length=1, null=True)),
                ('to_ribosomal_rna', models.CharField(blank=True, max_length=1, null=True)),
                ('small_rna', models.CharField(blank=True, max_length=1, null=True)),
                ('c_dna', models.CharField(blank=True, max_length=1, null=True)),
                ('plasma_rna', models.CharField(blank=True, max_length=1, null=True)),
                ('other_rna', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'sample_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=45, unique=True)),
                ('customer_name', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(max_length=45)),
                ('e_mail', models.CharField(blank=True, max_length=45, null=True)),
                ('tel', models.CharField(blank=True, max_length=45, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, max_length=2, null=True)),
                ('role', models.CharField(blank=True, max_length=45, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('field', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'user_info',
                'managed': False,
            },
        ),
    ]
