# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-08-01 08:40
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('lims_app', '0005_auto_20170719_0706'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('upload_user_id', models.IntegerField()),
                ('operate_user_id', models.IntegerField()),
                ('file_type', models.CharField(blank=True, max_length=45, null=True)),
                ('filename', models.CharField(blank=True, max_length=200, null=True)),
                ('file_path', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('upload_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuildLib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('project_number', models.CharField(max_length=45, unique=True)),
                ('sample_name', models.CharField(max_length=45)),
                ('sample_id', models.CharField(max_length=45, unique=True)),
                ('lib_id', models.CharField(blank=True, max_length=45, null=True)),
                ('time', models.CharField(blank=True, max_length=45, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'build_lib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DownMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('project_number', models.CharField(max_length=45, unique=True)),
                ('sample_name', models.CharField(max_length=45)),
                ('sample_id', models.CharField(max_length=45, unique=True)),
                ('q20', models.CharField(blank=True, max_length=45, null=True)),
                ('q30', models.CharField(blank=True, max_length=45, null=True)),
                ('data_count', models.CharField(blank=True, max_length=45, null=True)),
                ('time', models.CharField(blank=True, max_length=45, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'downmachine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QualityCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('project_number', models.CharField(max_length=45, unique=True)),
                ('sample_name', models.CharField(max_length=45)),
                ('sample_id', models.CharField(max_length=45, unique=True)),
                ('concentration', models.CharField(blank=True, max_length=45, null=True)),
                ('volume', models.CharField(blank=True, max_length=45, null=True)),
                ('rin', models.CharField(blank=True, max_length=45, null=True)),
                ('results', models.CharField(blank=True, max_length=1, null=True)),
                ('time', models.CharField(blank=True, max_length=45, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'quality_check',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SendSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('project_number', models.CharField(max_length=45, unique=True)),
                ('sample_name', models.CharField(max_length=45)),
                ('sepcies', models.CharField(max_length=45)),
                ('express_number', models.CharField(blank=True, max_length=45, null=True)),
                ('product_num', models.CharField(blank=True, max_length=45, null=True)),
                ('time', models.CharField(blank=True, max_length=45, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'send_sample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField()),
                ('project_number', models.CharField(max_length=45, unique=True)),
                ('sample_name', models.CharField(max_length=45)),
                ('sample_id', models.CharField(max_length=45, unique=True)),
                ('upmachinetype', models.CharField(blank=True, max_length=45, null=True)),
                ('mode', models.CharField(blank=True, max_length=45, null=True)),
                ('data_count', models.CharField(blank=True, max_length=45, null=True)),
                ('time', models.CharField(blank=True, max_length=45, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'upmachine',
                'managed': False,
            },
        ),
    ]
